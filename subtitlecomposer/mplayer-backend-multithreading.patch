diff -Naur old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfig.h new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfig.h
--- old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfig.h	2011-04-11 22:16:49.000000000 +0300
+++ new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfig.h	2011-04-12 01:06:30.000000000 +0300
@@ -57,6 +57,9 @@
 			int cacheSize() const { return optionAsInt( keyCacheSize() ); } /// in kbytes
 			void setCacheSize( int kbytes ) { setOption( keyCacheSize(), kbytes < 0 ? "" : QString::number( kbytes ) ); }
 
+			int decodingThreads() const { return optionAsInt( keyDecodingThreads() ); } /// decoding threads
+			void setDecodingThreads( int threads ) { setOption( keyDecodingThreads(), threads < 0 ? "" : QString::number( threads ) ); }
+
 			bool volumeNormalizationEnabled() const { return optionAsBool( keyVolumeNormalizationEnabled() ); }
 			void setVolumeNormalizationEnabled( bool enabled ) { setOption( keyVolumeNormalizationEnabled(), enabled ); }
 
@@ -83,6 +86,7 @@
 			static const QString& keyAudioOutput() { static const QString key( "AudioOutput" ); return key; }
 			static const QString& keyVideoOutput() { static const QString key( "VideoOutput" ); return key; }
 			static const QString& keyCacheSize() { static const QString key( "CacheSize" ); return key; }
+			static const QString& keyDecodingThreads() { static const QString key( "DecodingThreads" ); return key; }
 			static const QString& keyVolumeNormalizationEnabled() { static const QString key( "VolumeNormalizationEnabled" ); return key; }
 			static const QString& keyInputConfigPath() { static const QString key( "InputConfigPath" ); return key; }
 			static const QString& keyVdpauDivx() { static const QString key( "VdpauDivx" ); return key; }
@@ -106,6 +110,8 @@
 
 				defaults[keyCacheSize()] = "5120"; // in kbytes
 
+				defaults[keyDecodingThreads()] = "1"; // decoding threads
+
 				defaults[keyVolumeNormalizationEnabled()] = "false";
 
 				defaults[keyInputConfigPath()] = KGlobal::dirs()->locate( "appdata", "input.conf" );
diff -Naur old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.cpp new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.cpp
--- old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.cpp	2011-04-11 22:16:49.000000000 +0300
+++ new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.cpp	2011-04-12 01:23:57.000000000 +0300
@@ -43,6 +43,15 @@
  	m_pathUrlRequester->setWindowTitle( i18n( "Select the MPlayer executable" ) );
 	m_pathUrlRequester->setMode( KFile::File|KFile::ExistingOnly|KFile::LocalOnly );
 	m_pathUrlRequester->setUrl( KUrl( "mplayer" ) );
+
+	m_decodingThreadsSpinBox = new KIntSpinBox( generalGroupBox );
+	m_decodingThreadsSpinBox->setMinimum( 1 );
+	m_decodingThreadsSpinBox->setMaximum( 8 );
+
+	QLabel* threadsLabel = new QLabel( generalGroupBox );
+	threadsLabel->setText( i18n( "Decoding threads:" ) );
+	threadsLabel->setBuddy( m_decodingThreadsSpinBox );
+
 	m_useMplayer2CheckBox = new QCheckBox( generalGroupBox );
 	m_useMplayer2CheckBox->setText( i18n( "I am using MPlayer2" ) );
 
@@ -91,7 +100,11 @@
 	QGridLayout* generalLayout = createGridLayout( generalGroupBox );
 	generalLayout->addWidget( pathLabel, 0, 0, Qt::AlignRight|Qt::AlignVCenter );
 	generalLayout->addWidget( m_pathUrlRequester, 0, 1 );
-	generalLayout->addWidget( m_useMplayer2CheckBox, 1, 0, 1, 2 );
+
+	generalLayout->addWidget( threadsLabel, 1, 0, Qt::AlignRight|Qt::AlignVCenter );
+	generalLayout->addWidget( m_decodingThreadsSpinBox, 1, 1 );
+
+	generalLayout->addWidget( m_useMplayer2CheckBox, 2, 0, 1, 2 );
 
 	QGridLayout* videoLayout = createGridLayout( videoGroupBox );
 	videoLayout->addWidget( m_videoOutputCheckBox, 0, 0, Qt::AlignRight|Qt::AlignVCenter );
@@ -122,6 +135,7 @@
 	connect( m_hardFrameDropCheckBox, SIGNAL( toggled(bool) ), this, SIGNAL( settingsChanged() ) );
 	connect( m_useMplayer2CheckBox, SIGNAL( toggled(bool) ), this, SIGNAL( settingsChanged() ) );
 	connect( m_audioOutputComboBox, SIGNAL( textChanged(const QString&) ), this, SIGNAL( settingsChanged() ) );
+	connect( m_decodingThreadsSpinBox, SIGNAL( valueChanged(int) ), this, SIGNAL( settingsChanged() ) );
 	connect( m_avsyncSpinBox, SIGNAL( valueChanged(int) ), this, SIGNAL( settingsChanged() ) );
 	connect( m_videoOutputComboBox, SIGNAL( textChanged(const QString&) ), this, SIGNAL( settingsChanged() ) );
 
@@ -141,6 +155,8 @@
 	config()->setVolumeNormalizationEnabled( m_volumeNormalizationCheckBox->isChecked() );
 	config()->setAutoSyncFactor( m_avsyncCheckBox->isChecked() ? m_avsyncSpinBox->value() : -1 );
 
+	config()->setDecodingThreads( m_decodingThreadsSpinBox->value());
+
 	config()->setVideoOutput( m_videoOutputCheckBox->isChecked() ? m_videoOutputComboBox->currentText() : QString() );
 	config()->setVdpauDivx( m_vdpauDivxCheckBox->isChecked() );
 	config()->setFrameDropping( m_frameDropCheckBox->isChecked() );
@@ -157,6 +173,8 @@
 
 	m_volumeNormalizationCheckBox->setChecked( config()->volumeNormalizationEnabled() );
 
+	m_decodingThreadsSpinBox->setValue( config()->decodingThreads() );
+
 	m_avsyncCheckBox->setChecked( config()->hasAutoSyncFactor() );
 	if ( m_avsyncCheckBox->isChecked() )
 		m_avsyncSpinBox->setValue( config()->autoSyncFactor() );
diff -Naur old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.h new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.h
--- old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.h	2011-04-11 22:16:49.000000000 +0300
+++ new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerconfigwidget.h	2011-04-12 00:21:40.000000000 +0300
@@ -63,6 +63,7 @@
 			QCheckBox* m_videoOutputCheckBox;
 			KComboBox* m_audioOutputComboBox;
 			KIntSpinBox* m_avsyncSpinBox;
+			KIntSpinBox* m_decodingThreadsSpinBox;
 			QCheckBox* m_volumeNormalizationCheckBox;
 			QCheckBox* m_avsyncCheckBox;
 			QCheckBox* m_audioOutputCheckBox;
diff -Naur old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerprocess.cpp new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerprocess.cpp
--- old/subtitlecomposer-0.5.3/src/player/mplayer/mplayerprocess.cpp	2011-04-11 22:16:49.000000000 +0300
+++ new/subtitlecomposer-0.5.3/src/player/mplayer/mplayerprocess.cpp	2011-04-12 00:54:01.000000000 +0300
@@ -97,6 +97,12 @@
 		}
 	}
 
+	if ( m_config->decodingThreads()>1 )
+	{
+		args << "-lavdopts";
+		args << "threads=" + QString::number( m_config->decodingThreads() );
+	}
+
 	if ( m_config->hasAudioOutput() )
 		args << "-ao" << m_config->audioOutput();
 
